name: CI Checks

on:
  push:
    branches: [main]
    tags:
      - "*.*.*"
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        shell: bash -e {0} # -e to fail on error

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: "3.9"
          - os: ubuntu-latest
            python: "3.10"
          - os: ubuntu-latest
            python: "3.10"
            pip-flags: "--pre"

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip wheel
      - name: Install dependencies
        run: |
          pip install ${{ matrix.pip-flags }} ".[dev,test]"
      - name: Test
        env:
          MPLBACKEND: agg
          PLATFORM: ${{ matrix.os }}
          DISPLAY: :42
        run: |
          pytest -v --cov --color=yes
      - name: Upload coverage
        uses: codecov/codecov-action@v3

  package:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"
      - name: Install build dependencies
        run: python -m pip install --upgrade pip wheel twine build
      - name: Build package
        run: python -m build
      - name: Check package
        run: twine check --strict dist/*.whl

  release:
    needs: package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install hatch
        run: pip install hatch

      - name: Build project for distribution
        run: hatch build

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
